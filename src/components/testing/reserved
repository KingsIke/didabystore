import React, { useState } from "react";
import Vo from "../../images/Vector.png"
import { FiSmartphone } from 'react-icons/fi';
import { CgMathPlus } from "react-icons/cg";
import { CgMathEqual } from "react-icons/cg";
import { FaBookmark } from "react-icons/fa";
import { VscSettings } from "react-icons/vsc";

import list from './male.json'
import { Link } from "react-router-dom";
import { links } from './Mylink'

// const Categories = () => {





// const [heading, setHeading] = useState(" ")


//     const [isOpen, setIsOpen] = useState(false)
//     return (
//         <>


//             {links.map((link, i) => (
//                 <div>
//                 <div className="px-3 text-left md:cursor-pointer group" key={i}>
//                     <h3 className="py-7" onClick={()=>setHeading(link.name)}>{link.name}</h3>
//                     {link.submenu && (
//                         <div>
//                             <div className="absolute top-20 hidden group-hover:block hover:block md:hidden">

//                                 <div className="py-3">

//                                     <div className="w-4 h-4 left-3 absolute mt-1 bg-white rotate-45">

//                                     </div>
//                                 </div>
//                                 {/* <div className="bg-green-400 p-5 grid grid-cols-3 gap-10 ">
//                                     {
//                                         link.sublinks.map((mysublinks) => (
//                                             <div>
//                                                 <h1 className="text-lg font-semibold">{mysublinks.Head}</h1>
//                                                 {mysublinks.sublink.map((slink) => (
//                                                     <li className="text-sm text-gray-600 my2.5">
//                                                         <Link to={slink.link} className="hover:text-blue-500">
//                                                             {slink.name}
//                                                         </Link>
//                                                     </li>
//                                                 ))}
//                                             </div>

//                                         ))
//                                     }
//                                 </div> */}
//                             </div>

//                         </div>

//                     )}
//                 </div>
//                 {/* Mobile view */}
//                 <div className={`
//                 ${heading === link.name ? 'hidden': 'md:hidden'}
//                 `}>
//                     {}
//                     {
//                         link.sublinks.map((slinks) => (
//                             <div>
//                                 <div>
//                                     <h1 className="py-0 pl-7 font-sm md:pr-0 pr-5 text-sm ">{slinks.Head}</h1>
//                                 </div>
//                                 <div>
//                                     {
//                                         slinks.sublink.map(slink=>(
//                                             <li className="py-3 pl-14 text-xs">
//                                                 <Link to={slink.link}>
//                                                     {slink.name}
//                                                 </Link>
//                                             </li>
//                                         ) )
//                                     }
//                                 </div>
//                             </div>
//                         ))
//                     }
//                 </div>
//                 </div>
//             ))}













//             {/* <div id="accordion-collapse" data-accordion="collapse"> */}
//             < div >
//                 <h2 id="accordion-collapse-heading-1">
//                     <button onClick={() => setIsOpen((prev) => !prev)} type="button" class="w-[327px] h-[40px] rounded-md flex items-center justify-between  p-5 font-medium text-left text-gray-500  border-gray-200  focus:ring-4 focus:ring-gray-200 "
//                     >

//                         <span>Male</span>
//                         {!isOpen ? (
//                             <AiOutlineCaretDown className="h-12" />
//                         ) : (
//                             <CgMathEqual className="h-12" />
//                         )

//                         }
//                     </button>

//                     {isOpen && <div className="bg-blue-400 mt-3 flex flex-col items-center  rounded-lg p2 w-[327px]">
//                         {list.map((item, i) => (
//                             <div className="px-3 text-left " key={i}>
//                                 <h3 className="py-7">{item.shirt}</h3>
//                             </div>
//                         ))}
//                     </div>

//                     }


//                 </h2>
//             </div >









//             <div class="relative inline-block text-left mt-10">
//                 <div>
//                     <button type="button" class="inline-flex w-full justify-center gap-x-1.5 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50" id="menu-button" aria-expanded="true" aria-haspopup="true">
//                         Options
//                         <svg class="-mr-1 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
//                             <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
//                         </svg>
//                     </button>
//                 </div>

//                 <div class="absolute right-0 z-10 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
//                     <div class="py-1" role="none">
//                         {/* <!-- Active: "bg-gray-100 text-gray-900", Not Active: "text-gray-700" --> */}
//                         <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-0">Edit</a>
//                         <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-1">Duplicate</a>
//                     </div>
//                     <div class="py-1" role="none">
//                         <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-2">Archive</a>
//                         <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-3">Move</a>
//                     </div>
//                     <div class="py-1" role="none">
//                         <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-4">Share</a>
//                         <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-5">Add to favorites</a>
//                     </div>
//                     <div class="py-1" role="none">
//                         <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-6">Delete</a>
//                     </div>
//                 </div>
//             </div>

//         </>
//     )
// }

// export default Categories





// import React, { useState } from 'react';
// // import './YourComponent.scss'; // Make sure to adjust this to your actual stylesheet file

// const YourComponent = () => {
//   const [selectedOption, setSelectedOption] = useState('Option 1');
//   const options = ['Option 1', 'Option 2', 'Option 3', 'Option 4'];

//   const handleOptionChange = (option) => {
//     setSelectedOption(option);
//   };

//   return (
//     <div className="p-4">
//       <div className="relative inline-block text-left">
//         <div>
//           <button
//             type="button"
//             className="inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
//             id="dropdown-menu"
//             aria-haspopup="true"
//             aria-expanded="true"
//           >
//             {selectedOption}
//             <svg
//               className="-mr-1 ml-2 h-5 w-5"
//               xmlns="http://www.w3.org/2000/svg"
//               viewBox="0 0 20 20"
//               fill="currentColor"
//               aria-hidden="true"
//             >
//               <path
//                 fillRule="evenodd"
//                 d="M6.293 6.293a1 1 0 011.414 0L10 8.586l2.293-2.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
//                 clipRule="evenodd"
//               />
//             </svg>
//           </button>
//         </div>
//         <div
//           className="origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5"
//           role="menu"
//           aria-orientation="vertical"
//           aria-labelledby="dropdown-menu"
//         >
//           <div className="py-1" role="none">
//             {options.map((option) => (
//               <button
//                 key={option}
//                 onClick={() => handleOptionChange(option)}
//                 className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
//                 role="menuitem"
//               >
//                 {option}
//               </button>
//             ))}
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default YourComponent;